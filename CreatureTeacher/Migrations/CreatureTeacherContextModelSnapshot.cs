// <auto-generated />
using System;
using CreatureTeacher.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreatureTeacher.Migrations
{
    [DbContext(typeof(CreatureTeacherContext))]
    partial class CreatureTeacherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CreatureTeacher.Models.Creature", b =>
                {
                    b.Property<int>("CreatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EyeId")
                        .HasColumnType("int");

                    b.Property<int>("HeadId")
                        .HasColumnType("int");

                    b.Property<int>("MouthId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Parent1Id")
                        .HasColumnType("int");

                    b.Property<int>("Parent2Id")
                        .HasColumnType("int");

                    b.Property<int>("TailId")
                        .HasColumnType("int");

                    b.HasKey("CreatureId");

                    b.HasIndex("EyeId");

                    b.HasIndex("HeadId");

                    b.HasIndex("MouthId");

                    b.HasIndex("TailId");

                    b.ToTable("Creatures");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Eye", b =>
                {
                    b.Property<int>("EyeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codon")
                        .HasColumnType("longtext");

                    b.Property<string>("Dominance")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("EyeId");

                    b.ToTable("Eyes");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Head", b =>
                {
                    b.Property<int>("HeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codon")
                        .HasColumnType("longtext");

                    b.Property<string>("Dominance")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("HeadId");

                    b.ToTable("Heads");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Mouth", b =>
                {
                    b.Property<int>("MouthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codon")
                        .HasColumnType("longtext");

                    b.Property<string>("Dominance")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("MouthId");

                    b.ToTable("Mouths");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Tail", b =>
                {
                    b.Property<int>("TailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codon")
                        .HasColumnType("longtext");

                    b.Property<string>("Dominance")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("TailId");

                    b.ToTable("Tails");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Creature", b =>
                {
                    b.HasOne("CreatureTeacher.Models.Eye", "Eye")
                        .WithMany("Creatures")
                        .HasForeignKey("EyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreatureTeacher.Models.Head", "Head")
                        .WithMany("Creatures")
                        .HasForeignKey("HeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreatureTeacher.Models.Mouth", "Mouth")
                        .WithMany("Creatures")
                        .HasForeignKey("MouthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreatureTeacher.Models.Tail", "Tail")
                        .WithMany("Creatures")
                        .HasForeignKey("TailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eye");

                    b.Navigation("Head");

                    b.Navigation("Mouth");

                    b.Navigation("Tail");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Eye", b =>
                {
                    b.Navigation("Creatures");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Head", b =>
                {
                    b.Navigation("Creatures");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Mouth", b =>
                {
                    b.Navigation("Creatures");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Tail", b =>
                {
                    b.Navigation("Creatures");
                });
#pragma warning restore 612, 618
        }
    }
}
